// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BuyOrderEvent extends ethereum.Event {
  get params(): BuyOrderEvent__Params {
    return new BuyOrderEvent__Params(this);
  }
}

export class BuyOrderEvent__Params {
  _event: BuyOrderEvent;

  constructor(event: BuyOrderEvent) {
    this._event = event;
  }

  get orderNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get startTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class CancelOrderEvent extends ethereum.Event {
  get params(): CancelOrderEvent__Params {
    return new CancelOrderEvent__Params(this);
  }
}

export class CancelOrderEvent__Params {
  _event: CancelOrderEvent;

  constructor(event: CancelOrderEvent) {
    this._event = event;
  }

  get orderNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get withdrawer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ethToBuyer(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ethToSeller(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get withdrawTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SellOrderEvent extends ethereum.Event {
  get params(): SellOrderEvent__Params {
    return new SellOrderEvent__Params(this);
  }
}

export class SellOrderEvent__Params {
  _event: SellOrderEvent;

  constructor(event: SellOrderEvent) {
    this._event = event;
  }

  get orderNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class APIKeyEscrow__getOrderResultValue0Struct extends ethereum.Tuple {
  get buyer(): Address {
    return this[0].toAddress();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get duration(): BigInt {
    return this[3].toBigInt();
  }

  get startTime(): BigInt {
    return this[4].toBigInt();
  }
}

export class APIKeyEscrow__orderMapResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getBuyer(): Address {
    return this.value0;
  }

  getSeller(): Address {
    return this.value1;
  }

  getPrice(): BigInt {
    return this.value2;
  }

  getDuration(): BigInt {
    return this.value3;
  }

  getStartTime(): BigInt {
    return this.value4;
  }
}

export class APIKeyEscrow extends ethereum.SmartContract {
  static bind(address: Address): APIKeyEscrow {
    return new APIKeyEscrow("APIKeyEscrow", address);
  }

  getAddressOrder(user: Address): Array<BigInt> {
    let result = super.call(
      "getAddressOrder",
      "getAddressOrder(address):(uint256[])",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigIntArray();
  }

  try_getAddressOrder(user: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAddressOrder",
      "getAddressOrder(address):(uint256[])",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getOrder(_orderNumber: BigInt): APIKeyEscrow__getOrderResultValue0Struct {
    let result = super.call(
      "getOrder",
      "getOrder(uint256):((address,address,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_orderNumber)]
    );

    return changetype<APIKeyEscrow__getOrderResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getOrder(
    _orderNumber: BigInt
  ): ethereum.CallResult<APIKeyEscrow__getOrderResultValue0Struct> {
    let result = super.tryCall(
      "getOrder",
      "getOrder(uint256):((address,address,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_orderNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<APIKeyEscrow__getOrderResultValue0Struct>(value[0].toTuple())
    );
  }

  getOrderNextNumber(): BigInt {
    let result = super.call(
      "getOrderNextNumber",
      "getOrderNextNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getOrderNextNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderNextNumber",
      "getOrderNextNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  listOfOrders(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "listOfOrders",
      "listOfOrders(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_listOfOrders(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "listOfOrders",
      "listOfOrders(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orderMap(param0: BigInt): APIKeyEscrow__orderMapResult {
    let result = super.call(
      "orderMap",
      "orderMap(uint256):(address,address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new APIKeyEscrow__orderMapResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_orderMap(
    param0: BigInt
  ): ethereum.CallResult<APIKeyEscrow__orderMapResult> {
    let result = super.tryCall(
      "orderMap",
      "orderMap(uint256):(address,address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new APIKeyEscrow__orderMapResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  orderNumber(): BigInt {
    let result = super.call("orderNumber", "orderNumber():(uint256)", []);

    return result[0].toBigInt();
  }

  try_orderNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("orderNumber", "orderNumber():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyMessageCall extends ethereum.Call {
  get inputs(): BuyMessageCall__Inputs {
    return new BuyMessageCall__Inputs(this);
  }

  get outputs(): BuyMessageCall__Outputs {
    return new BuyMessageCall__Outputs(this);
  }
}

export class BuyMessageCall__Inputs {
  _call: BuyMessageCall;

  constructor(call: BuyMessageCall) {
    this._call = call;
  }

  get _orderNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyMessageCall__Outputs {
  _call: BuyMessageCall;

  constructor(call: BuyMessageCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get _orderNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class SellMessageCall extends ethereum.Call {
  get inputs(): SellMessageCall__Inputs {
    return new SellMessageCall__Inputs(this);
  }

  get outputs(): SellMessageCall__Outputs {
    return new SellMessageCall__Outputs(this);
  }
}

export class SellMessageCall__Inputs {
  _call: SellMessageCall;

  constructor(call: SellMessageCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SellMessageCall__Outputs {
  _call: SellMessageCall;

  constructor(call: SellMessageCall) {
    this._call = call;
  }
}
